server:
  port: 8081
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME} # 앱 비밀번호를 발급받은 구글 계정
    password: ${MAIL_PASSWORD} # 발급받은 앱 비밀번호
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
  application:
    name: moongkl-here-admin-api
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    #url: jdbc:mariadb://${MARIA_HOST}:${MARIA_PORT}/${INITIAL_DB}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    url: jdbc:mariadb://${MARIA_HOST}:${MARIA_PORT}/${INITIAL_DB}?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: ${MARIA_USERNAME}
    password: ${MARIA_PASSWORD}
  sql:
    init:
      mode: always
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: true
    #database-platform: org.hibernate.dialect.MariaDB106Dialect
    hibernate:
      ddl-auto: ${SPRING_DATASOURCE_DDL_AUTO}
      #MariaDB여도 SpringBoot3, MariaDB10.2에서 아래 설정을 사용해야함
      dialect: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        jdbc:
          time_zone: Asia/Seoul
        show_sql: true
        format_sql: true
    repositories:
      enabled: true
    defer-datasource-initialization: true

  cloud:
    aws:
      region:
        static: ${AWS_REGION}
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      sqs:
        queue-url: ${AWS_SQS_QUEUE_URL}
        #queue-url: ${LOCAL_SQS_QUEUE_URL}
        queue-name: ${AWS_SQS_QUEUE_NAME} # listen
        #queue-name: ${LOCAL_SQS_QUEUE_NAME} # listen
      stack:
        auto: false
      ses:
        region: ${AWS_REGION}
      s3:
        bucket: files.mobile-api.moongkl.com
        region: ${AWS_REGION}
        root-directory: ${AWS_S3_ROOT_DIRECTORY}
        enterprise-logo-directory: "enterprise-logo"
        enterprise-story-directory: "enterprise-story"
      cloudfront:
        distribution-domain: ${CLOUDFRONT_URL}
logging:
  level:
    org:
      springframework:
        security: DEBUG

app:
  jwt:
    secret: ${APP_JWT_SECRET}
    expiration: ${APP_JWT_EXPIRATION}
  host-url: ${HOST_URL}
  client1-url: ${CLIENT1_URL}
  client2-url: ${CLIENT2_URL}
